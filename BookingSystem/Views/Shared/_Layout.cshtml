@using Data.Constants
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Web</title>

    <!-- CSS Global Compulsory -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap">


    <!-- CSS Front Template -->
    <link rel="stylesheet" href="~/assets/css/theme.min.css">

    <!-- CSS Implementing Plugins -->
    <link rel="stylesheet" href="~/assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.css">

    <link href="~/css/custom.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/vendor/bootstrap-icons/font/bootstrap-icons.css">

     <!-- Data Tables Plugins -->
   @*   <link rel="stylesheet" href="https://cdn.datatables.net/2.1.8/css/dataTables.dataTables.css" /> *@
   <link rel="stylesheet" href="~/DataTables/datatables.css" />

</head>
<body>
    <!-- ========== HEADER ========== -->
    <header id="header" class="navbar navbar-expand-lg navbar-end navbar-light bg-white">
        <div class="container">
            <nav class="js-mega-menu navbar-nav-wrap">
                <!-- Default Logo -->
                <a class="navbar-brand" href="/home" aria-label="Front">
                    <img class="avatar-img" src="~/img/TableTalk Logo.svg" style="width:50px; height: 50px;" alt="Logo">
                </a>
                <!-- End Default Logo -->
                <!-- Toggler -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-default">
                        <i class="bi-list"></i>
                    </span>
                    <span class="navbar-toggler-toggled">
                        <i class="bi-x"></i>
                    </span>
                </button>
              
                <!-- End Toggler -->
                <!-- Collapse -->
                <div class="collapse navbar-collapse" id="navbarNavDropdown">
                    <ul class="navbar-nav">
                        @{
                            var result = User.Identity.IsAuthenticated.ToString();
                            if (result == "True")
                            {
                                // var name = User.Claims.ToArray()[Data.Constants.AuthDataIndex.Name].Value;
                                // var email = User.Claims.ToArray()[Data.Constants.AuthDataIndex.Email].Value;
                                 var profilePhotoUrl = User.Claims.ToArray()[Data.Constants.AuthDataIndex.ProfilePhotoUrl].Value;
                                var userType = User.Claims.ToArray()[Data.Constants.AuthDataIndex.UserType].Value;
                                var id = User.Claims.ToArray()[Data.Constants.AuthDataIndex.Id].Value;


                                <!-- Landings -->
                                <li class=" nav-item">
                                    <a id="home" class="nav-link active" href="#" role="button">Home</a>
                                </li>
                                <!-- End Landings -->
                          
                                
                                @if(userType == Data.Constants.UserType.Restaurant)
                                {
                                    <li class=" nav-item">
                                        <a id="mybookings" class="nav-link" href="../Restaurant/Bookings">Booking List</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="btn-transition" data-id="@id" onclick="EditRestaurantProfile(this)">
                                            <span class="avatar avatar-sm avatar-circle">
                                                <img class="avatar-img" src="@profilePhotoUrl" alt="Image Description" style="width: 40px;">
                                            </span>
                                        </a>
                                    </li>

                                }
                                else
                                {
                                    <li class=" nav-item">
                                        <a id="mybookings" class="nav-link" href="../Customer/Bookings">My Bookings</a>
                                    </li>

                                    <li class="nav-item">
                                        <a class="btn-transition" data-id="@id" onclick="EditCustomerProfile(this)">
                                            <span class="avatar avatar-sm avatar-circle">
                                                <img class="avatar-img" src="~/assets/img/100x60/img1.jpg" alt="Image Description" style="width: 40px;">
                                            </span>
                                        </a>
                                    </li>
                                       
                                }
                                
                            }
                            else
                            {
                                <li class="nav-item">
                                    <button type="button" class="btn btn-primary btn-sm" id="btn-signup">Sign Up</button>
                                </li>
                            }

                        }
                      
                        <!-- Dropdown -->
                        <!-- End Dropdown -->
                        <!-- End Button -->
                    </ul>
                </div>
                <!-- End Collapse -->
            </nav>
        </div>
    </header>




    <!-- Profile Offcanvas -->
    <div class="offcanvas offcanvas-end" tabindex="-1" id="customerFormOffcanvas" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header">
            <h3 id="offcanvasRightLabel mb-0">Profile</h3>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body d-flex flex-column justify-content-between">
            <div id="div-customer-form">
            </div>

            <div class="d-flex border">
                <a type="button" class="btn btn-outline-danger btn-sm w-100" href="~/Authentication/Logout">Logout</a>
            </div>
        </div>
    </div>
    <!-- Profile Offcanvas -->



    <!-- Restaurant Profile Modal -->
    <div class="modal fade" id="restaurantFormModal" tabindex="-1" role="dialog" >
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div id="div-restaurant-form"></div>
            </div>
        </div>
    </div>




    <!-- ========== END HEADER ========== -->
    <div class="container" style="min-height: 75vh;">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- ========== FOOTER ========== -->
    <footer class="container text-center content-space-1">
        <!-- Logo -->
        <a class="d-inline-flex align-items-center mb-2" href="index.html" aria-label="Front">
            <img class="brand" src="~/img/Logo Horizontal.svg" alt="logo" />
        </a>
        <!-- End Logo -->

        <p class="small text-muted mb-0">2021 © Htmlstream. All rights reserved.</p>
    </footer>
    <!-- ========== END FOOTER ========== -->


     <script src="~/lib/jquery/dist/jquery.min.js"></script>
     <script src="~/js/sweetalert.js"></script>

    <!-- DataTables Implementing Plugins -->
    @* <script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script> *@
    <script src="~/DataTables/datatables.js"></script>


    <!-- JS Global Compulsory -->
    <script src="~/assets/vendor/bootstrap/dist/js/bootstrap.bundle.min.js"></script>


    <!-- JS Implementing Plugins -->
    <script src="~/assets/vendor/hs-mega-menu/dist/hs-mega-menu.min.js"></script>


    <script src="~/assets/vendor/hs-file-attach/dist/hs-file-attach.js"></script>
    <script src="~/assets/vendor/hs-file-attach/dist/hs-file-attach.min.js"></script>


 
    <!-- JS Plugins Init. -->
    @*
    <script>
          $(document).ready(function (){
              // INITIALIZATION OF FILE ATTACH
            // =======================================================
            new HSFileAttach('.js-file-attach')
          })
    </script>
    *@
    @*
    <script>
    $(document).ready(function () {
    $('#example').DataTable();
    });
    </script>


    <script>
    (function () {
    // INITIALIZATION OF MEGA MENU
    // =======================================================
    new HSMegaMenu('.js-mega-menu', {
    desktop: {
    position: 'left'
    }
    })
    })()
    </script>
    <script>
    document.getElementById('btn-signup').addEventListener('click', function() {
    location.href = '../Customer/Register';
    });
    </script>
    *@

    <script type="text/javascript">
        $(function () {
            new HSMegaMenu('.js-mega-menu', {
                desktop: {
                    position: 'left'
                }
            });
            document.getElementById('btn-signup').addEventListener('click', function () {
                location.href = '../Customer/Register';
            });
        });


        function EditCustomerProfile(e) {
            var id = $(e).attr('data-id');
            Form("Edit", id)
        }

        function Form(FormType, Id) {
            $.ajax({
                cache: false,
                url: '@Url.Action("CustomerForm", "Customer")',
                data: { FormType: FormType, Id: Id },
                beforeSend: function () {

                },
                success: function (data) {
                    $('#div-customer-form').empty().append(data);
                    $('#customerFormOffcanvas').offcanvas('show');

                },
                complete: function () {


                    $('#customerForm').submit(function (e) {

                        e.preventDefault();

                        $.ajax({
                            cache: false,
                            url: '@Url.Action("UpSert", "Customer")',
                            type: "Post",
                            data: $(this).serialize(),
                            beforeSend: function () {
                                $('.btn').prop("disabled", true);
                            },
                            success: function (data) {
                                console.log("data:", data);
                                if (data?.Status == "@ResponseStatus.Success") {
                                    $('#customerFormOffcanvas').offcanvas('hide');
                                    alert("Success!!");

                                }
                                else {
                                    alert("Failed!!")
                                }

                            },
                            complete: function () {
                                $('.btn').prop("disabled", false);


                            }
                        });
                    });
                }

            });
        }

        function EditRestaurantProfile(e) {
            var id = $(e).attr('data-id');
            RestuarantForm("Edit", id)
        }


        function RestuarantForm(FormType, Id) {
            $.ajax({
                cache: false,
                url: '@Url.Action("RestaurantForm", "Restaurant")',
                data: { FormType: FormType, Id: Id },
                beforeSend: function () {

                },
                success: function (data) {
                    $('#div-restaurant-form').empty().append(data);
                    $('#restaurantFormModal').modal('show');

                },
                complete: function () {


                    $('#RestaurantForm').submit(function (e) {

                        e.preventDefault();

                        $.ajax({
                            cache: false,
                            url: '@Url.Action("UpSert", "Restaurant")',
                            type: "Post",
                            data: $(this).serialize(),
                            beforeSend: function () {
                                $('.btn').prop("disabled", true);
                            },
                            success: function (data) {
                                console.log("data:", data);
                                if (data?.Status == "@ResponseStatus.Success") {
                                    $('#restaurantFormModal').modal('hide');
                                    alert("Success!!");

                                }
                                else {
                                    alert("Failed!!")
                                }

                            },
                            complete: function () {
                                $('.btn').prop("disabled", false);


                            }
                        });
                    });
                }

            });
        }


        function maxwidthheight(width, height) {
            var MAX_WIDTH = 1200;  // to remove maximum width height
            var MAX_HEIGHT = 1200;
            var width = width;
            var height = height;

            if (width > height) {
                if (width > MAX_WIDTH) {
                    height *= MAX_WIDTH / width;
                    width = MAX_WIDTH;
                }
            } else {
                if (height > MAX_HEIGHT) {
                    width *= MAX_HEIGHT / height;
                    height = MAX_HEIGHT;
                }
            }
            var a = { width: width, height: height };
            return a
        }

        function dataURItoBlob(dataURI) {
            var binary = atob(dataURI.split(',')[1]);
            var array = [];
            for (var i = 0; i < binary.length; i++) {
                array.push(binary.charCodeAt(i));
            }
            return new Blob([new Uint8Array(array)], { type: 'image/png' });
        }


        function ShowCoverPreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var files = $("#cover-file-data").get(0).files;
                var file = files[0];

                var img = document.createElement("img");
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                    img.src = e.target.result;
                    var mime_type = "image/jpeg";
                    if (typeof output_format !== "undefined" && output_format == "png") {
                        mime_type = "image/png";
                    }
                    var canvas = document.createElement("canvas");
                    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
                        alert('Photo is uploading...');
                    }
                    //set max height width
                    var gg = maxwidthheight(img.width, img.height);
                    width = gg.width;
                    height = gg.height;
                    canvas.width = width;
                    canvas.height = height;
                    var ctx = canvas.getContext("2d");
                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                    var dataurl = canvas.toDataURL(mime_type, 60 / 100);
                    //document.getElementById('image').src = dataurl;
                    var blob = dataURItoBlob(dataurl);
                    console.log("blob" + dataurl);

                    reader.onloadend = function () {
                        console.log("reader result " + reader.result);
                        var base64data = reader.result;
                        // console.log(base64data);
                        $('#cover_photo_article').val(base64data.split(",")[1]);

                    }

                }
                reader.readAsDataURL(file);
            }



        }



        function ShowProfilePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var files = $("#profile-file-data").get(0).files;
                var file = files[0];

                var img = document.createElement("img");
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                    img.src = e.target.result;
                    var mime_type = "image/jpeg";
                    if (typeof output_format !== "undefined" && output_format == "png") {
                        mime_type = "image/png";
                    }
                    var canvas = document.createElement("canvas");
                    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
                        alert('Photo is uploading...');
                    }
                    //set max height width
                    var gg = maxwidthheight(img.width, img.height);
                    width = gg.width;
                    height = gg.height;
                    canvas.width = width;
                    canvas.height = height;
                    var ctx = canvas.getContext("2d");
                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                    var dataurl = canvas.toDataURL(mime_type, 60 / 100);
                    //document.getElementById('image').src = dataurl;
                    var blob = dataURItoBlob(dataurl);
                    console.log("blob" + dataurl);

                    reader.onloadend = function () {
                        console.log("reader result " + reader.result);
                        var base64data = reader.result;
                        console.log(base64data);
                        $('#profile_photo_article').val(base64data.split(",")[1]);
                    }

                }
                reader.readAsDataURL(file);
            }



        }

    </script>

    @await RenderSectionAsync("Scripts", required: false)
    
</body>
</html>
